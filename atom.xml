<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>漂自己的移，让别人都撞墙去吧</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gagahappy.com/"/>
  <updated>2016-08-17T18:03:11.000Z</updated>
  <id>http://gagahappy.com/</id>
  
  <author>
    <name>戛戛Happy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>成功迁移到docker</title>
    <link href="http://gagahappy.com/webapp-migrate-to-docker/"/>
    <id>http://gagahappy.com/webapp-migrate-to-docker/</id>
    <published>2016-05-08T12:24:57.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>搞了两天，终于迁移到docker了，docker确实优点挺多的，比如直接提供了应用程序的运行环境，当然还有很多，初次接触还不是很了解。这次迁移用到了两个docker:wordpress与mysql，使用这两个dock, 省去了安装mysql和php环境的工作</p>
<p>一下步的工作就是制作一个本站的docker image,这样以后随便放到那里就都可以使用了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搞了两天，终于迁移到docker了，docker确实优点挺多的，比如直接提供了应用程序的运行环境，当然还有很多，初次接触还不是很了解。这次迁移用到了两个docker:wordpress与mysql，使用这两个dock, 省去了安装mysql和php环境的工作&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
      <category term="互联网" scheme="http://gagahappy.com/categories/internet/"/>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/internet/development/"/>
    
    
      <category term="docker" scheme="http://gagahappy.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>rails validate uniqueness multiple columns</title>
    <link href="http://gagahappy.com/rails-validate-uniqueness-multiple-columns/"/>
    <id>http://gagahappy.com/rails-validate-uniqueness-multiple-columns/</id>
    <published>2015-07-24T15:53:54.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>rails 2</p>
<blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; validates_uniqueness_of <span class="symbol">:user_id</span>, <span class="symbol">scope:</span> [<span class="symbol">:friend_id</span>, <span class="symbol">:something_else</span>]</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
<p>rails 3</p>
<blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; validates <span class="symbol">:user_id</span>, <span class="symbol">:uniqueness</span> =&gt; &#123;<span class="symbol">:scope</span> =&gt; [<span class="symbol">:friend_id</span>, <span class="symbol">:something_else</span>]&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure></blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;rails 2&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Rails" scheme="http://gagahappy.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>rails 缓存字段异常</title>
    <link href="http://gagahappy.com/rails-cache-column-deleted-exception/"/>
    <id>http://gagahappy.com/rails-cache-column-deleted-exception/</id>
    <published>2015-07-23T02:11:56.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>rails 启动后，会cached表的字段，如果在删除了某个字段，而没有重新启动rails,则rails依然加载这个字段，造成异常，开发模式也是如此</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;rails 启动后，会cached表的字段，如果在删除了某个字段，而没有重新启动rails,则rails依然加载这个字段，造成异常，开发模式也是如此&lt;/p&gt;

    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Rails" scheme="http://gagahappy.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>苹果系统 xos 使用crontab定时任务</title>
    <link href="http://gagahappy.com/how-to-use-crontab-in-your-xos/"/>
    <id>http://gagahappy.com/how-to-use-crontab-in-your-xos/</id>
    <published>2015-07-21T02:20:04.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>在苹果系统 xos 使用crontab定时任务时，出现</p>
<blockquote>
<p>“/usr/bin/vi” exited with status 1</p>
</blockquote>
<p>解决方法</p>
<blockquote>
<p>The issue turned out to be vi and nothing to do with cron. Doing export EDITOR=vim fixed it</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在苹果系统 xos 使用crontab定时任务时，出现&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“/usr/bin/vi” exited with status 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The issu
    
    </summary>
    
      <category term="我爱Linux" scheme="http://gagahappy.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://gagahappy.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>PostGIS安装问题</title>
    <link href="http://gagahappy.com/postgis-install-issues/"/>
    <id>http://gagahappy.com/postgis-install-issues/</id>
    <published>2015-05-31T14:03:37.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>用brew 安装 postgis （环境：postgre用的是mac版的postgre.app，psql用的是brew版的)</p>
<p>这样问题就来了，在安装postgis时，会查找psql，由于psql在/usr/sbin下，即用的是brew的，安装postgis时总是报错（具体错误大概是说不能解释postgre sql）。搞了半天没弄好。</p>
<p>决定把postgre.app的路径放到加载路径的最前面，/Applications/Postgres93.app/Contents/MacOS,放到路径最前面，再次安装postgis，一切安好。但undefined method `point’ for #&lt;ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition:错误还是没有解决</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用brew 安装 postgis （环境：postgre用的是mac版的postgre.app，psql用的是brew版的)&lt;/p&gt;
&lt;p&gt;这样问题就来了，在安装postgis时，会查找psql，由于psql在/usr/sbin下，即用的是brew的，安装postgis时总
    
    </summary>
    
      <category term="数据库" scheme="http://gagahappy.com/categories/database/"/>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/database/development/"/>
    
    
      <category term="postgresql" scheme="http://gagahappy.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>ruby 哈希排序注意事项</title>
    <link href="http://gagahappy.com/ruby-hash-sort-by-key-be-case-of-key-type/"/>
    <id>http://gagahappy.com/ruby-hash-sort-by-key-be-case-of-key-type/</id>
    <published>2015-05-20T15:22:43.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 如果key的数据类型不一致，会导致异常，其实这种情况已经不是第一次遇上了</span></div><div class="line"><span class="comment"># ArgumentError: comparison of Array with Array failed</span></div><div class="line">hash = &#123;<span class="symbol">c:</span> <span class="number">3</span>, <span class="string">"a"</span> =&gt; <span class="number">1</span>, <span class="symbol">b:</span><span class="number">2</span>&#125;</div><div class="line"></div><div class="line"><span class="comment"># 可以用hash#sort_by解决,把key统一成一致的数据类型</span></div><div class="line">hash.sort_by&#123;<span class="params">|k,v|</span>k.to_s&#125;</div><div class="line"><span class="comment"># 等效于</span></div><div class="line">hash.sort_by&#123;<span class="params">|h|</span>h[<span class="number">0</span>].to_s&#125;</div><div class="line"><span class="comment"># 最终的输出结果为</span></div><div class="line"><span class="comment">#=&gt; [["a", 1], [:b, 2], [:c, 3]]</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>在git stash 中使用--index 恢复暂存区</title>
    <link href="http://gagahappy.com/use-index-option-when-you-use-git-stash/"/>
    <id>http://gagahappy.com/use-index-option-when-you-use-git-stash/</id>
    <published>2015-05-19T13:58:01.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>在git stash 中使用–index 恢复暂存区<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">git stash pop --index</div><div class="line"></div><div class="line">Your branch is up-to-date with <span class="string">'origin/develop'</span>.</div><div class="line">Changes to be committed:</div><div class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</div><div class="line"></div><div class="line">	modified:   metaprogramming/blocks/block_args.rb</div><div class="line"></div><div class="line">Changes not staged <span class="keyword">for</span> commit:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</div><div class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</div><div class="line"></div><div class="line">	modified:   metaprogramming/blocks/block_args.rb</div><div class="line">	modified:   metaprogramming/blocks/block_binding.rb</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在git stash 中使用–index 恢复暂存区&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="git" scheme="http://gagahappy.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git cat-file type选项和p选项的区别</title>
    <link href="http://gagahappy.com/what-difference-between-type-and-p-option/"/>
    <id>http://gagahappy.com/what-difference-between-type-and-p-option/</id>
    <published>2015-05-18T13:58:14.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git cat-file <span class="built_in">type</span>选项和-p选项的区别</div><div class="line">git cat-file 查看对象内容</div><div class="line">git cat-file [commit | blob | tree | tag] &lt;object&gt; 可以用来查看一个对象的内容，但要求object一定要和[commit | blob | tree | tag]相匹配</div><div class="line"></div><div class="line">可以使用一个通用的option: -p</div><div class="line">git cat-file -p object来搞定，这样就不用区分object的类型了</div><div class="line"></div><div class="line">PS：不太明白为什么要提供 [commit | blob | tree | tag] ，它和-p的区别是什么</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="git" scheme="http://gagahappy.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git ls-files 显示暂存区目录树</title>
    <link href="http://gagahappy.com/git-ls-files-show-index-files/"/>
    <id>http://gagahappy.com/git-ls-files-show-index-files/</id>
    <published>2015-05-17T14:18:07.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>git ls-files 显示暂存区目录树</p>
<p>如果一个删除的文件已经git add到暂存区，则暂存区的目录树不会包含这个文件，这也证明了暂存区有着自己的目录树</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git ls-files 显示暂存区目录树&lt;/p&gt;
&lt;p&gt;如果一个删除的文件已经git add到暂存区，则暂存区的目录树不会包含这个文件，这也证明了暂存区有着自己的目录树&lt;/p&gt;

    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="git" scheme="http://gagahappy.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>method_missing 方法使用注意事项</title>
    <link href="http://gagahappy.com/method-missing-be-careful-use/"/>
    <id>http://gagahappy.com/method-missing-be-careful-use/</id>
    <published>2015-05-14T15:18:31.000Z</published>
    <updated>2016-08-18T13:22:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>method_missing 方法使用注意事项，其实最要应该注意的就是不能在method_missing 方法中出现找不到的方法，否则程序将掉入无限循环中</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">method_missing</span><span class="params">(method, *args)</span></span></div><div class="line">  not_exist_method <span class="comment">#一个不存在的方法</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment"># 当程序进入method_missing方法后，发现找不到not_exist_method方法，则又会掉入method_missing,然后又会发现找不到not_exist_method，然后又掉入method_missing,然后loop...</span></div><div class="line"></div><div class="line"><span class="comment"># 这种陷阱一般很难发现，所以在method_missing中编写代码时，一定要小心</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;method_missing 方法使用注意事项，其实最要应该注意的就是不能在method_missing 方法中出现找不到的方法，否则程序将掉入无限循环中&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>git write-tree 生成tree对象</title>
    <link href="http://gagahappy.com/git-write-tree-generate-tree-id/"/>
    <id>http://gagahappy.com/git-write-tree-generate-tree-id/</id>
    <published>2015-05-13T14:38:07.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>可以用git write-tree 为暂存区生成tree对象，以便可以用ls-tree对暂存区进行查看</p>
<p>执行<br>git write-tree<br>git ls_tree <git write-tree="" 的输出=""></git></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以用git write-tree 为暂存区生成tree对象，以便可以用ls-tree对暂存区进行查看&lt;/p&gt;
&lt;p&gt;执行&lt;br&gt;git write-tree&lt;br&gt;git ls_tree &lt;git write-tree=&quot;&quot; 的输出=&quot;&quot;&gt;&lt;/git&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="git" scheme="http://gagahappy.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>查看ORM实际生成的sql</title>
    <link href="http://gagahappy.com/active-record-transmit-to-sql/"/>
    <id>http://gagahappy.com/active-record-transmit-to-sql/</id>
    <published>2015-05-06T15:51:18.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>可以调用to_sql方法察看实际ORM输出出來的SQL，例如Event.open_public.recent_three_days.to_sql<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Post.where(<span class="symbol">author_id:</span> <span class="number">1</span>).order(<span class="string">"id desc"</span>).limit(<span class="number">3</span>).to_sql</div><div class="line"><span class="comment"># SELECT  `posts`.* FROM `posts`  WHERE `posts`.`author_id` = 1 ORDER BY id desc LIMIT 3</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可以调用to_sql方法察看实际ORM输出出來的SQL，例如Event.open_public.recent_three_days.to_sql&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Rails" scheme="http://gagahappy.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>向Scope传递参数</title>
    <link href="http://gagahappy.com/pass-argument-to-scope/"/>
    <id>http://gagahappy.com/pass-argument-to-scope/</id>
    <published>2015-05-05T15:56:43.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>向Scope传递参数<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Event</span> &lt; ActiveRecord::Base</span></div><div class="line">    scope <span class="symbol">:recent</span>, -&gt; &#123; <span class="params">|date|</span> where([<span class="string">"created_at &gt; ? "</span>, date ]) &#125;</div><div class="line">    <span class="comment"># 等同于 scope :recent, lambda&#123; |date| where(["created_at &gt; ? ", date ]) &#125;</span></div><div class="line">    <span class="comment"># 或 scope :recent, Proc.new&#123; |t| where(["created_at &gt; ? ", t ]) &#125;</span></div><div class="line"><span class="keyword">end</span></div><div class="line">Event.recent( Time.now - <span class="number">7</span>.days )</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;向Scope传递参数&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div cl
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Rails" scheme="http://gagahappy.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>Pry Outline</title>
    <link href="http://gagahappy.com/pry-outline/"/>
    <id>http://gagahappy.com/pry-outline/</id>
    <published>2015-05-03T13:08:51.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>如果你用gem install rake安装了10.1.0版本的rake（假设是最新的），当你直接使用调用rake时，使用的会是这个最新版本的rake。</p>
<p>如果项目的Gemfile中指定的版本是0.9.6（或者是Gemfile.lock中是0.9.6）的话，你如果不加bundle exec，将会用rake 10.1.0的版本去执行本来应该由0.9.6版本的rake写出的Rake task。</p>
<p>会不会出问题？可能会，可能不会。因为很有可能原作者使用0.9.6版本的rake写的Rake task中没有什么被废弃的部分，10.1.10也能正确执行。但是不兼容的情况也会发生。</p>
<p>bundle exec就是为了解决这样的问题而存在的：在目前的Bundle环境里执行某个操作，这样对于不同的人来说，不论系统里是什么版本的Gem，总是会使用该项目Gemfile中指定的版本来执行某个操作。</p>
<p>其他<br> pry plugins 也可以裝一下，包括：<br> 1. pry-stack_explorer 輸入 show-stack 的話可以看到 call stack<br> 2. pry-debugger 可以加上 step, next, finish 和 continue 的控制</p>
<p> 3. pry-nav:也因為 binding.pry 太好用。社群也基於 Pry 繼續做了其他的 pry 的 plugin。最 killling 的就是 pry-nav。pry-nav 做的就是可以讓你在 binding.pry 的攔節點前後，作 next、step。直接一行一行的逐一 debug。相信我，如果你在寫通訊交涉的 Library，或者是正在改複雜的 Rails View</p>
<p> 4. pry-remote<br> Pry 搭配 Rails，在往常的作法只有 rails s 可以叫出 debug console 而已。但很多人實際上是使用 Pow 作為開發用 HTTP Server。這樣的需求可以用 pry-remote 解決。pry-remote 的作法是把原本的 bindig.pry 改成 binding.remote_pry。而 binding.remote_pry 會開一支 DRb 起來，開發者再用 pry-remote 連到 debug console。</p>
<p>5 sinatra使用Pry<br>pry -r ./application.rb   # sinatra project, require application.rb<br>rails c                   # rails project</p>
<p>6 pry 用法<br>show-method 显示当前对象的源码<br>show-method Author#hi 显示Author#hi方法的源码</p>
<p>.pwd前面的.是调用shell的命令，而非pry的本身的方法</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你用gem install rake安装了10.1.0版本的rake（假设是最新的），当你直接使用调用rake时，使用的会是这个最新版本的rake。&lt;/p&gt;
&lt;p&gt;如果项目的Gemfile中指定的版本是0.9.6（或者是Gemfile.lock中是0.9.6）的话，你如
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
      <category term="pry" scheme="http://gagahappy.com/tags/pry/"/>
    
  </entry>
  
  <entry>
    <title>rake 实例变量作用范围</title>
    <link href="http://gagahappy.com/scope-of-instance-variable-in-rake-block/"/>
    <id>http://gagahappy.com/scope-of-instance-variable-in-rake-block/</id>
    <published>2015-04-30T05:20:05.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>rake 实例变量作用范围,可以看到在task的block中，当前self为main，所以@people可以在say方法中访问。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">desc <span class="string">"test instance variable"</span></div><div class="line">task <span class="symbol">:hello_world</span> =&gt; <span class="symbol">:environment</span> <span class="keyword">do</span></div><div class="line">  @people = <span class="string">"Jone"</span></div><div class="line">  puts <span class="keyword">self</span> <span class="comment">#=&gt;main</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">say</span></span></div><div class="line">    puts <span class="keyword">self</span> <span class="comment">#=&gt;main</span></div><div class="line">    puts @people</div><div class="line">  <span class="keyword">end</span></div><div class="line">  say</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment">#=&gt;main</span></div><div class="line"><span class="comment">#=&gt;main</span></div><div class="line"><span class="comment">#=&gt;Jone</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;rake 实例变量作用范围,可以看到在task的block中，当前self为main，所以@people可以在say方法中访问。&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;di
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>安装memcached、redis、postgresql问题总结</title>
    <link href="http://gagahappy.com/issues-of-install-memcached-reds-postgresql/"/>
    <id>http://gagahappy.com/issues-of-install-memcached-reds-postgresql/</id>
    <published>2015-04-29T15:53:38.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>编译 ./configure –prefix=/srv/memcached/memcached145 –with-libevent=/usr/<br>需要安装 libevent ，安装时要确保知道安装路径</p>
<p>启动memcached<br>memcached -d -u root -m 200 -P /tmp/memcached.pid</p>
<p>安装redis</p>
<p>make PREFIX=/srv/redis/redis2815 install</p>
<p>启动:daemonize yes: Make redis run as a daemon<br>redis-server /usr/etc/redis.conf</p>
<p>安装postgresql<br>遇到问题:Can’t find the ‘libpq-fe.h header<br>解决方法:<br>1、gem install pg -v ‘0.18.1’ – –with-pg-config=/path/config<br>–with-pg=/path/pg –with-pg-lib=/path/<br>2、yum install postgresql-devel<br>最终用方法2解决<br>yum list installed | grep postgres</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;编译 ./configure –prefix=/srv/memcached/memcached145 –with-libevent=/usr/&lt;br&gt;需要安装 libevent ，安装时要确保知道安装路径&lt;/p&gt;
&lt;p&gt;启动memcached&lt;br&gt;memcached -d
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="redis" scheme="http://gagahappy.com/tags/redis/"/>
    
      <category term="postgresql" scheme="http://gagahappy.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>部署thin + nginx</title>
    <link href="http://gagahappy.com/deploy-nginx-thin/"/>
    <id>http://gagahappy.com/deploy-nginx-thin/</id>
    <published>2015-04-28T05:46:16.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>部署thin + nginx<br>生成配置文件<br>thin config -C /etc/thin/<config-name>.yml -c <rails-app-root-path> –servers <number-of-threads> -e <environment><br>thin config -C /etc/thin/myapp.yml -c /var/rails/myapp –servers 5 –socket /tmp/thin.myapp.sock -e development<br>替换<config-name>为自己的应用名称，替换<rails-app-root-path>为应用的根目录，替换<number-of-threads>为启动的线程数，也就是启动多少个Thin服务，替换<environment>为运行环境。</environment></number-of-threads></rails-app-root-path></config-name></environment></number-of-threads></rails-app-root-path></config-name></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">thin:</span></div><div class="line"><span class="symbol">environment:</span> development</div><div class="line"><span class="symbol">address:</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span></div><div class="line"><span class="symbol">port:</span> <span class="number">3001</span></div><div class="line"><span class="symbol">timeout:</span> <span class="number">30</span></div><div class="line"><span class="symbol">log:</span> log/thin.log</div><div class="line"><span class="symbol">pid:</span> tmp/pids/thin.pid</div><div class="line"><span class="symbol">max_conns:</span> <span class="number">1024</span></div><div class="line"><span class="symbol">max_persistent_conns:</span> <span class="number">512</span></div><div class="line"><span class="symbol">wait:</span> <span class="number">30</span></div><div class="line"><span class="symbol">servers:</span> <span class="number">2</span></div><div class="line"><span class="symbol">daemonize:</span> <span class="literal">true</span></div><div class="line"><span class="comment"># require: []</span></div></pre></td></tr></table></figure>
<p>启动: thin start -C config/thin.yml<br>停止: thin stop -C config/thin.yml<br>nginx:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">     listen 3001;</div><div class="line">     charset utf-8;</div><div class="line">     root /var/rails/mysapp/public;</div><div class="line">     access_log logs/access.log;</div><div class="line">     error_log  logs/error.log;</div><div class="line"></div><div class="line">     location / &#123;</div><div class="line">         <span class="comment"># proxy_pass          http://rails_servers;</span></div><div class="line">         <span class="comment"># proxy_redirect      default;</span></div><div class="line">         proxy_redirect      <span class="literal">false</span>;</div><div class="line">         proxy_set_header    X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">         proxy_set_header    X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">         proxy_set_header    Host <span class="variable">$http_host</span>;</div><div class="line">         proxy_next_upstream http_502 http_504 error timeout invalid_header;</div><div class="line">         proxy_pass <span class="literal">false</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (<span class="_">-f</span> <span class="variable">$request_filename</span>/index.html)</div><div class="line">        &#123;</div><div class="line">          rewrite (.*) <span class="variable">$1</span>/index.html <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (<span class="_">-f</span> <span class="variable">$request_filename</span>.html) &#123;</div><div class="line">          rewrite (.*) <span class="variable">$1</span>.html <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (!<span class="_">-f</span> <span class="variable">$request_filename</span>) &#123;</div><div class="line">          proxy_pass http://rails_servers;</div><div class="line">          <span class="built_in">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"> &#125;</div><div class="line"> upstream rails_servers&#123;</div><div class="line">        server 127.0.0.1:3002;</div><div class="line">        server 127.0.0.1:3003;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;部署thin + nginx&lt;br&gt;生成配置文件&lt;br&gt;thin config -C /etc/thin/&lt;config-name&gt;.yml -c &lt;rails-app-root-path&gt; –servers &lt;number-of-threads&gt; -e &lt;environm
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="nginx" scheme="http://gagahappy.com/tags/nginx/"/>
    
      <category term="thin" scheme="http://gagahappy.com/tags/thin/"/>
    
  </entry>
  
  <entry>
    <title>rspec exception identity or equivalence</title>
    <link href="http://gagahappy.com/rspec-exception-identity-or-equivalence/"/>
    <id>http://gagahappy.com/rspec-exception-identity-or-equivalence/</id>
    <published>2015-04-25T15:59:48.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>expect</code> does not support <code>==</code> matcher.<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">expect(actual).to eql(expected)   <span class="comment"># passes if actual.eql?(expected)</span></div><div class="line">expect(actual).to equal(expected) <span class="comment"># passes if actual.equal?(expected)</span></div><div class="line"></div><div class="line"><span class="comment"># <span class="doctag">NOTE:</span> `expect` does not support `==` matcher.</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;expect&lt;/code&gt; does not support &lt;code&gt;==&lt;/code&gt; matcher.&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="程序开发" scheme="http://gagahappy.com/categories/development/"/>
    
    
      <category term="Ruby" scheme="http://gagahappy.com/tags/Ruby/"/>
    
      <category term="rspec" scheme="http://gagahappy.com/tags/rspec/"/>
    
  </entry>
  
  <entry>
    <title>Delegation be enhance by active support in module</title>
    <link href="http://gagahappy.com/delegation-be-enhance-by-active-support-in-module/"/>
    <id>http://gagahappy.com/delegation-be-enhance-by-active-support-in-module/</id>
    <published>2015-04-24T15:54:33.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>基本思想是:当访问一个对象的方法时，如果这个方法不存，则转发这个方法给委托的对象</p>
<p>#Delegation is particularly useful with Active Record associations:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Greeter</span> &lt; ActiveRecord::Base</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hello</span></span></div><div class="line">    <span class="string">'hello'</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">goodbye</span></span></div><div class="line">    <span class="string">'goodbye'</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> &lt; ActiveRecord::Base</span></div><div class="line">  belongs_to <span class="symbol">:greeter</span></div><div class="line">  delegate <span class="symbol">:hello</span>, <span class="symbol">to:</span> <span class="symbol">:greeter</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">Foo.new.hello   <span class="comment"># =&gt; "hello"</span></div><div class="line">Foo.new.goodbye <span class="comment"># =&gt; NoMethodError: undefined method `goodbye' for #&lt;Foo:0x1af30c&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基本思想是:当访问一个对象的方法时，如果这个方法不存，则转发这个方法给委托的对象&lt;/p&gt;
&lt;p&gt;#Delegation is particularly useful with Active Record associations:&lt;br&gt;&lt;figure class=&quot;hig
    
    </summary>
    
      <category term="杂七杂八" scheme="http://gagahappy.com/categories/gossip/"/>
    
    
  </entry>
  
  <entry>
    <title>pg连接错误</title>
    <link href="http://gagahappy.com/pg-connection-bad/"/>
    <id>http://gagahappy.com/pg-connection-bad/</id>
    <published>2015-04-23T07:45:18.000Z</published>
    <updated>2016-08-17T18:03:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>pg连接错误<br>postgresql_adapter.rb:1216:in `initialize’: 致命错误:  用户 “pgsql” Ident 认证失败 (PG::ConnectionBad)<br>问题环境<br>在安装postgresql_server的机器上，部署rails应用，连接时host:127.0.0.1出现以上错误，改为ip地址后，正常访问</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;pg连接错误&lt;br&gt;postgresql_adapter.rb:1216:in `initialize’: 致命错误:  用户 “pgsql” Ident 认证失败 (PG::ConnectionBad)&lt;br&gt;问题环境&lt;br&gt;在安装postgresql_server的机器
    
    </summary>
    
      <category term="数据库" scheme="http://gagahappy.com/categories/database/"/>
    
    
      <category term="postgresql" scheme="http://gagahappy.com/tags/postgresql/"/>
    
  </entry>
  
</feed>
